name: Auth Service CI/CD

on:
  push:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.Js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Installing dependencies
        run: npm install
      - name: Build code
        run: npm run build
      - name: Run test
        run: npm run test:cov
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  database-migration:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.Js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Installing dependencies
        run: npm install
      - name: Run migration
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}
    if: github.ref == 'refs/heads/main'

  publish:
    runs-on: ubuntu-latest
    needs: database-migration
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.Js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}:latest
          build-args: |
            DATABASE_URL=${{secrets.DATABASE_URL}}
            JWT_SECRET=${{secrets.JWT_SECRET}}
            GOOGLE_CLIENT_ID=${{secrets.GOOGLE_CLIENT_ID}}
            GOOGLE_CLIENT_SECRET=${{secrets.GOOGLE_CLIENT_SECRET}}
            GOOGLE_CALLBACK_URL=${{secrets.GOOGLE_CALLBACK_URL}}
            SALT_ROUNDS=${{secrets.SALT_ROUNDS}}
            PORT=${{secrets.PORT}}
    if: github.ref == 'refs/heads/main'

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Chmod private key
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.GCLOUD_SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
      - name: SSH to google cloud
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{secrets.GCP_USERNAME}}@${{secrets.EXTERNAL_IP}} "
          sudo docker container rm -f {{secrets.DOCKER_REPOSITORY}} || true &&
          sudo docker image rm -f ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}:latest || true &&
          sudo docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}:latest &&
          sudo docker run --name {{secrets.DOCKER_REPOSITORY}} -d -p ${{secrets.PORT}}:${{secrets.PORT}} ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}:latest"
    if: github.ref == 'refs/heads/main'